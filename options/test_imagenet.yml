# general settings
name: test_Diff
model_type: MYModel
scale: 1
num_gpu: auto  # auto: can infer from your visible devices automatically. official: 4 GPUs
manual_seed: 0


# dataset and data loader settings
datasets:
  # Uncomment these for validation
  val_1:
    name: BSD300
    type: DeblurPairedDataset
    dataroot_gt: /data/lhq23/Neighbor2Neighbor/validation/BSD300/test
    dataroot_lq: /data/lhq23/Neighbor2Neighbor/validation/BSD300/test
    io_backend:
      type: disk
    window_size: 32

  val_2:
    name: Kodak
    type: DeblurPairedDataset
    dataroot_gt: /data/lhq23/datasets/kodak_sub/original
    dataroot_lq: /data/lhq23/datasets/kodak_sub/original
    io_backend:
      type: disk
    window_size: 32

  val_3:
    name: Set14
    type: DeblurPairedDataset
    dataroot_gt: /data/lhq23/Neighbor2Neighbor/validation/Set14
    dataroot_lq: /data/lhq23/Neighbor2Neighbor/validation/Set14
    io_backend:
      type: disk
    window_size: 32

# network structures
network_g:
  type: attendiffneighbor
  n_encoder_res: 4
  inp_channels: 3
  out_channels: 3
  dim: 48
  num_blocks: [6,8]
  heads: [4,8]
  num_refinement_blocks: 4
  bias: False
  LayerNorm_type: WithBias
  ffn_expansion_factor: 2
  n_feats: 64
  n_denoise_res: 1
  linear_start: 0.1
  linear_end: 0.99
  timesteps: 4


# path
path:
  # use the pre-trained Real-ESRNet model
  pretrain_network_g: experiments/gauss25_wolscale/models/net_g_400000.pth
  pretrain_network_S1: ~
  param_key_g: params_ema
  strict_load_g: False
  ignore_resume_networks: network_S1



val:
  save_img: True
  suffix: ~  # add suffix to saved images, if None, use exp name

  metrics:
    psnr: # metric name
      type: calculate_psnr
      crop_border: 0
      test_y_channel: False

    ssim:
      type: calculate_ssim
      crop_border: 0
      test_y_channel: False



